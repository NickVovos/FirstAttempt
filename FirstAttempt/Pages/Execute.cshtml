@page
@model FirstAttempt.Pages._ViewExecuteModel
@{
}
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">


<div class="d-flex flex-column align-items-center">
    <div class="dropdown mb-4 mt-5">
        <button class="btn btn-primary dropdown-toggle" type="button" id="recipeDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="background-color:#ffc107">
            Select a Recipe
        </button>
        <ul class="dropdown-menu" aria-labelledby="recipeDropdown">
            @foreach (var recipe in Model.AvailableRecipes)
            {
                <li>
                    <a class="dropdown-item" href="?recipeId=@recipe.Id">
                        @recipe.Title
                    </a>
                </li>
            }
        </ul>
    </div>

    <div class="flex flex-col">
        <h1 class="text-4xl font-bold">@Model.Recipe.Title</h1>
        <div class="w-full">
            <div class="d-flex justify-content-between text-sm text-muted-foreground">
                <span>@Math.Round(Model.CurrentProgress)% Complete</span>
            </div>

            <div class="progress my-2">
                <div class="progress-bar bg-warning"
                     role="progressbar"
                     style="width: @Model.CurrentProgress%"
                     aria-valuemin="0"
                     aria-valuemax="100">
                </div>
            </div>
        </div>
    </div>

    <div class="card animate-fade-up p-5" style="border-radius:10px;">
        <div class="" style="background:none">
            <h2><i> @Model.CurrentStep.Title</i></h2>
        </div>

        <div class="card-content m-6">
            @if (Model.CurrentStep.Images.Any())
            {
                <div class="image-container">
                    <button class="btn btn-light" id="prevImageBtn" onclick="changeImage(-1)" style="background-color:#ffc107">←</button>
                    <img id="stepImage" class="w-full h-64 object-cover" style="width: calc(100%); min-width:600px; border-radius: 15px; border-image: round; max-width:1000px" src="@Model.CurrentStep.Images[0]" alt="@Model.CurrentStep.Title" />
                    <button class="btn btn-light" id="nextImageBtn" onclick="changeImage(1)" style="background-color:#ffc107">→</button>
                </div>
            }
            <p class="text-lg mt-4">@Model.CurrentStep.Description</p>
            <div class="d-flex items-center justify-between text-sm text-muted-foreground">
                <span style="font-size:14px; color:gray">Duration: @Model.CurrentStep.Duration minutes</span>
            </div>
        </div>
    </div>

    <div class="d-flex justify-content-between pt-4">
        <button class="btn btn-warning" onclick="window.location.href='?recipeId=@Model.SelectedRecipeId&step=@(Model.CurrentStepIndex - 1)'"
        @(Model.CurrentStepIndex == 1 ? "disabled" : "")>
            <span class="mr-2 h-4 w-4">←</span>
            Previous Step
        </button>
        <button class="btn btn-warning" onclick="window.location.href='?recipeId=@Model.SelectedRecipeId&step=@(Model.CurrentStepIndex + 1)'"
        @(Model.CurrentStepIndex == Model.Recipe.Steps.Count ? "disabled" : "")>
            Next Step
            <span class="ml-2 h-4 w-4">→</span>
        </button>
    </div>
</div>

<script>
    let currentImageIndex = 0;
    const images = @Html.Raw(Json.Serialize(Model.CurrentStep.Images));

    function changeImage(direction) {
        currentImageIndex += direction;
        if (currentImageIndex < 0) {
            currentImageIndex = images.length - 1;
        } else if (currentImageIndex >= images.length) {
            currentImageIndex = 0;
        }
        document.getElementById("stepImage").src = images[currentImageIndex];
    }
</script>