@page
@model FirstAttempt.Pages._ViewExecuteModel

<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

<div class="d-flex flex-column align-items-center">

    <!-- Dropdown Menu -->
    <div class="dropdown mb-4 mt-5">
        <button class="btn btn-primary dropdown-toggle" type="button" id="recipeDropdown" data-bs-toggle="dropdown" aria-expanded="false" style="background-color:#ffc107">
            Select a Recipe
        </button>
        <ul class="dropdown-menu" aria-labelledby="recipeDropdown">
            @foreach (var recipe in Model.AvailableRecipes)
            {
                <li>
                    <a class="dropdown-item" href="?recipeId=@recipe.Id">
                        @recipe.Title
                    </a>
                </li>
            }
        </ul>
    </div>

    <!-- Default Page Content -->
    @if (Model.Recipe == null)
    {
        <div class="text-center mt-5">
            <h1 class="display-4">Welcome!</h1>
            <p class="lead">Please choose a recipe from the dropdown above to get started.</p>
        </div>

        @if (Model.AvailableRecipes?.Any() == true)
        {
            <div id="recipeCarousel" class="carousel slide mb-4" data-bs-ride="carousel">
                <div class="carousel-inner">
                    @for (int i = 0; i < Model.AvailableRecipes[0].Images.Count; i++)
                    {
                        <div class="carousel-item @(i == 0 ? "active" : "")">
                            <img src="@Model.AvailableRecipes[0].Images[i]" class="d-block w-100 rounded" alt="Recipe">
                        </div>
                    }
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#recipeCarousel" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#recipeCarousel" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </button>
            </div>
        }
    }
    else
    {
        <!-- Recipe Steps & Content -->
        <div class="flex flex-col">
            <h1 class="text-4xl font-bold">@Model.Recipe.Title</h1>
            <div class="w-full">
                <div class="d-flex justify-content-between text-sm text-muted-foreground">
                    <span>@Math.Round(Model.CurrentProgress)% Complete</span>
                </div>

                <div class="progress my-2">
                    <div class="progress-bar bg-warning"
                         role="progressbar"
                         style="width: @Model.CurrentProgress%"
                         aria-valuemin="0"
                         aria-valuemax="100">
                    </div>
                </div>
            </div>
        </div>

        <div class="card animate-fade-up p-5" style="border-radius:10px;">
            <div style="background:none">
                <h2><i>@Model.CurrentStep.Title</i></h2>
            </div>

            <div class="card-content m-4">
                @if (Model.CurrentStep.Images.Any())
                {
                    <div class="image-container d-flex align-items-center justify-content-center mb-3">
                        <button class="btn btn-light pr-2" id="prevImageBtn" onclick="changeImage(-1)" style="background-color:#ffc107; margin-right: 15px;">←</button>
                        <img id="stepImage"
                             class="rounded"
                             style="width:600px; height:400px; object-fit:cover;"
                             src="@Model.CurrentStep.Images[0]"
                             alt="@Model.CurrentStep.Title" />
                        <button class="btn btn-light pl-2" id="nextImageBtn" onclick="changeImage(1)" style="background-color:#ffc107; margin-left: 15px;">→</button>
                    </div>
                }

                <p class="text-lg mt-4">@Model.CurrentStep.Description</p>

                @if (Model.CurrentStep.Ingredients?.Any() == true)
                {
                    <h4>Ingredients for this step:</h4>
                    <div class="d-flex">
                        <div class="ingredients-column" style="width: 300px;">
                            <ul>
                                @foreach (var ingredient in Model.CurrentStep.Ingredients.Take(4))
                                {
                                    <li>@ingredient.Name - @ingredient.Quantity</li>
                                }
                            </ul>
                        </div>
                        <div class="ingredients-column" style="width: 300px;">
                            <ul>
                                @foreach (var ingredient in Model.CurrentStep.Ingredients.Skip(4))
                                {
                                    <li>@ingredient.Name - @ingredient.Quantity</li>
                                }
                            </ul>
                        </div>
                    </div>
                }

                <div class="d-flex items-center justify-between text-sm text-muted-foreground">
                    <span style="font-size:14px; color:gray">Duration: @Model.CurrentStep.Duration minutes</span>
                </div>
            </div>
        </div>

        <div class="pt-4">
            <button class="btn btn-warning" onclick="window.location.href='?recipeId=@Model.SelectedRecipeId&step=@(Model.CurrentStepIndex - 1)'"
            @(Model.CurrentStepIndex == 1 ? "disabled" : "")>
                ← Previous Step
            </button>
            <span class="mx-5"></span>
            <button class="btn btn-warning" onclick="window.location.href='?recipeId=@Model.SelectedRecipeId&step=@(Model.CurrentStepIndex + 1)'"
            @(Model.CurrentStepIndex == Model.Recipe.Steps.Count ? "disabled" : "")>
                Next Step →
            </button>
        </div>
    }
</div>

<script>
    let currentImageIndex = 0;
    const images = @Html.Raw(Json.Serialize(Model.CurrentStep.Images));

    function changeImage(direction) {
        if (images.length === 0) return; // Prevent errors with no images

        currentImageIndex = (currentImageIndex + direction + images.length) % images.length; // Circular logic
        document.getElementById("stepImage").src = images[currentImageIndex];
    }
</script>
